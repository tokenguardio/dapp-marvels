version: "3.9"

services:
  mongodb:
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
    env_file:
      - ./envs/mongo.env
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - ./setup.sql:/docker-entrypoint-initdb.d/setup.sql
    env_file:
      - ./envs/postgres.env
  wasabi-image:
    image: patternsjrojek/subsquid-squids:wasabi-substrate-latest
    command:
      [
        "echo",
        "Processor image wasabi-substrate-latest pulled successfully. No service started.",
      ]

  creator-client:
    build:
      context: ./dashboard-creator-client
      dockerfile: localhost.Dockerfile
    command: "npm run dev"  
    ports:
      - "5173:5173"
    volumes:
      - ./dashboard-creator-client:/app/
      - /app/node_modules
    env_file:
      - ./envs/creator-client.env
    depends_on:
      - creator-server
  creator-server:
    user: root
    build:
      context: ./dashboard-creator-server
      dockerfile: Dockerfile
    restart: always
    command: ["npm", "run", "start:dev"]
    ports:
      - 8081:8081
    env_file:
      - ./envs/creator-server.env
    volumes:
      - "./dashboard-creator-server/src:/app/src"
      - "./dashboard-creator-server/scripts/db:/app/scripts/db"
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - mongodb
      - db-api
  db-api:
    build:
      context: ./db-api
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    command: ["npm", "run", "start:dev"]
    volumes:
      - ./db-api:/app
    env_file:
      - ./envs/db-api.env
    depends_on:
      - postgres
volumes:
  mongodata:
  postgresdata:
